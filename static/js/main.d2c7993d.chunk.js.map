{"version":3,"sources":["reportWebVitals.js","CardList.js","SearchBox.js","scroll.js","ErrorBoundary.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","Searchfield","searchchange","className","type","placeholder","onChange","Scroll","props","style","overflow","border","height","background","children","ErrorBoundry","state","hasError","error","info","this","setState","haserror","Component","App","onsearchchange","event","target","value","fetch","Response","json","users","filterdrobots","filter","name","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"wKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCSCQ,EAbE,SAAC,GAAW,EAAVC,OAEX,MAAM,IAAIC,MAAM,aCSTC,EAZC,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC3B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAU,kCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCCXK,EARF,SAACC,GACV,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,QAAQC,WAAW,QAAvF,SACKL,EAAMM,YCYJC,E,kDAdX,WAAYP,GAAO,IAAD,8BACd,cAAMA,IACDQ,MAAM,CAACC,UAAS,GAFP,E,qDAIlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMM,SACJ,wDAEHF,KAAKZ,MAAMM,a,GAZCS,aC8CZC,E,kDAzCX,aAAe,IAAD,8BACV,gBAYJC,eAAe,SAACC,GACZ,EAAKL,SAAS,CAACpB,YAAayB,EAAMC,OAAOC,SAZzC,EAAKZ,MAAM,CACPlB,OAAQ,GACRG,YAAY,IAJN,E,qDAOd,WAAoB,IAAD,OACf4B,MAAM,8CACLtC,MAAK,SAAAuC,GAAQ,OAAGA,EAASC,UACzBxC,MAAK,SAAAyC,GAAK,OAAE,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAMxC,WACC,IAAD,OACUC,EAAeb,KAAKJ,MAAMlB,OAAOoC,QAAO,SAAApC,GAC1C,OAAOA,EAAOqC,KAAKC,cAAcC,SAAS,EAAKrB,MAAMf,YAAYmC,kBAErE,OAA8B,IAA3BhB,KAAKJ,MAAMlB,OAAOwC,OACV,4CAIH,sBAAKnC,UAAU,KAAKM,MAAO,CAACI,WAAW,UAAvC,UACI,8CACA,cAAC,EAAD,CAAWX,aAAckB,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAQmC,e,GAhC5BV,aCAlBgB,IAASC,OACC,cAAC,EAAD,IACLC,SAASC,eAAe,SAM7BtD,M","file":"static/js/main.d2c7993d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=  ({robots})=>{\r\n    if(true){\r\n        throw new Error('Noooooo!');\r\n    }\r\n    const cardcomponent = robots.map((user,i)=>{\r\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n    })\r\n    return (\r\n        <div>\r\n        {cardcomponent}\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({Searchfield, searchchange})=>{\r\n    return(\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--geen bg-lightest-blue' \r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange={searchchange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return (\r\n        <div style={{overflow: 'scroll', border: '5px solid black', height: '600px',background:'blue' }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={hasError:false}\r\n    }\r\n    componentDidMount(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n    render(){\r\n        if(this.state.haserror){\r\n           return <h1>oops. that is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './scroll';\r\nimport ErrorBoundry from './ErrorBoundary';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            Searchfield:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response=> Response.json())\r\n        .then(users=>this.setState({robots: users}));\r\n    }\r\n\r\n    onsearchchange=(event)=>{\r\n        this.setState({Searchfield: event.target.value});\r\n    }\r\n    render()\r\n    {\r\n        const filterdrobots= this.state.robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(this.state.Searchfield.toLowerCase())\r\n        })\r\n        if(this.state.robots.length===0){\r\n            return <h1>Loading...</h1>\r\n        }\r\n        else{\r\n            return (\r\n                <div className='tc' style={{background:'yellow' }}>\r\n                    <h1>ROBOFRIENDS </h1>\r\n                    <SearchBox searchchange={this.onsearchchange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filterdrobots}/> \r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './App';\nReactDOM.render(\n          <App/>     \n    ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}